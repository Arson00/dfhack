name: Build win64

on:
  workflow_call:
    inputs:
      ref:
        type: string
        default: ''
      artifact-name:
        type: string
      append-date-and-hash:
        type: boolean
        default: false
      cache-id:
        type: string
        default: ''
      cache-readonly:
        type: boolean
        default: false
      common-files:
        type: boolean
        default: true
      launchdf:
        type: boolean
        default: false

jobs:
  build-win64:
    name: Build win64
    runs-on: ubuntu-22.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install ccache
      - name: Clone DFHack
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          submodules: true
          fetch-depth: 0
      - name: Get 3rd party SDKs
        if: inputs.launchdf
        uses: actions/checkout@v3
        with:
          repository: DFHack/3rdparty
          ref: main
          ssh-key: ${{ secrets.DFHACK_3RDPARTY_TOKEN }}
          path: depends/steam
      - name: Fetch ccache
        uses: actions/cache/restore@v3
        with:
          path: build/win64-cross/ccache
          key: win-msvc-${{ inputs.cache-id }}-${{ github.sha }}
          restore-keys: |
            win-msvc-${{ inputs.cache-id }}
            win-msvc
      - name: Cross-compile
        env:
          CMAKE_EXTRA_ARGS: '-DBUILD_STONESENSE:BOOL=1 -DBUILD_DOCS:BOOL=${{ inputs.common-files }} -DINSTALL_DATA_FILES:BOOL=${{ inputs.common-files }} -DINSTALL_SCRIPTS:BOOL=${{ inputs.common-files }} -DBUILD_DFLAUNCH:BOOL=${{ inputs.launchdf }}'
        run: |
          cd build
          bash -x build-win64-from-linux.sh
      - name: Trim cache
        run: |
          cd build
          ccache -d win64-cross/ccache --max-size 200M
          ccache -d win64-cross/ccache --cleanup
          ccache -d win64-cross/ccache --show-stats --verbose
      - name: Save ccache
        uses: actions/cache/save@v3
        with:
          path: build/win64-cross/ccache
          key: win-msvc-${{ inputs.cache-id }}-${{ github.sha }}
      - name: Format artifact name
        if: inputs.append-date-and-hash
        id: artifactname
        run: echo "name=${{ inputs.artifact-name }}-$(date +%Y%m%d)-$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      - name: Upload artifact
        if: inputs.artifact-name
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.append-date-and-hash && steps.artifactname.outputs.name || inputs.artifact-name }}
          path: build/win64-cross/output/*
